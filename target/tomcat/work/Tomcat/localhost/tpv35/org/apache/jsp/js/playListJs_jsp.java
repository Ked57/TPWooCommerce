/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/7.0.47
 * Generated at: 2018-02-12 11:19:58 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.js;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import commerce.catalogue.service.CatalogueManager;
import commerce.catalogue.domaine.modele.Article;
import commerce.catalogue.domaine.modele.Livre;
import commerce.catalogue.domaine.modele.Musique;
import commerce.catalogue.domaine.modele.Piste;
import java.util.Iterator;

public final class playListJs_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private javax.el.ExpressionFactory _el_expressionfactory;
  private org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public void _jspInit() {
    _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
    _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("application/javascript; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");

	if (application.getAttribute("catalogueManager") == null) {
		response.sendRedirect("./index.jsp");
	} else {
		CatalogueManager catalogueManager = (CatalogueManager) application
				.getAttribute("catalogueManager");
		Iterator<Article> listeDesArticles = catalogueManager
				.getArticles().iterator();
		Livre livre = null;
		Musique musique = null;
		Article article;

      out.write("\r\n");
      out.write("window.addEventListener(\"load\", myFunction, false);\r\n");
      out.write("function myFunction(event) {\r\n");

		while (listeDesArticles.hasNext()) {
			article = (Article) listeDesArticles.next();
			if (article instanceof Musique) {

      out.write("\r\n");
      out.write("var myPlaylist_");
      out.print(article.getRefArticle());
      out.write(" = new jPlayerPlaylist({\r\n");
      out.write("cssSelectorAncestor : \"#jp_container_");
      out.print(article.getRefArticle());
      out.write("\",\r\n");
      out.write("jPlayer: \"#jquery_jplayer_");
      out.print(article.getRefArticle());
      out.write("\"}, [");

	musique = (Musique) article;
				if (musique.getPistes().size() > 0) {
					Iterator<Piste> itPistes = musique.getPistes()
							.iterator();
					Piste unePiste;
					while (itPistes.hasNext()) {
						unePiste = itPistes.next();

      out.write("\r\n");
      out.write("{ title:\"");
      out.print(unePiste.getTitre().replace("\"", "\\\"" ));
      out.write("\", mp3:\"");
      out.print(unePiste.getUrl());
      out.write("\" },\r\n");

					}
				}

      out.write("\r\n");
      out.write("\r\n");
      out.write("], { swfPath : \"/js/jplayer-2.9.2/jplayer\", supplied : \"mp3\", wmode:\r\n");
      out.write("\"window\", useStateClassSkin: true, autoBlur: false, smoothPlayBar: true,\r\n");
      out.write("keyEnabled: true });\r\n");


			}
		}

      out.write("\r\n");
      out.write("var jp_playlist_tab = document.getElementsByClassName(\"jp-playlist\") ;\r\n");
      out.write(" for (i = 0; i < jp_playlist_tab.length; i++) {\r\n");
      out.write("    jp_playlist_tab[i].style.display = \"none\";\r\n");
      out.write("} \r\n");
      out.write("}\r\n");

	}

    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try { out.clearBuffer(); } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
